{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateTimeInput = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nlet userSelectedDate = null;\nlet intervalId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (selectedDate <= now) {\n      startBtn.disabled = true;\n      iziToast.warning({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n    }\n  },\n};\n\nflatpickr(dateTimeInput, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateTimeInput.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const difference = userSelectedDate - currentTime;\n\n    if (difference <= 0) {\n      clearInterval(intervalId);\n      updateTimerUI(0);\n      dateTimeInput.disabled = false;\n      return;\n    } else {\n      updateTimerUI(difference);\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}"],"names":["dateTimeInput","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","options","selectedDates","selectedDate","iziToast","flatpickr","difference","updateTimerUI","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"2GAMA,MAAMA,EAAgB,SAAS,eAAe,iBAAiB,EACzDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAS,SAAW,GAEpB,IAAIK,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAFQ,IAAI,MAGdT,EAAS,SAAW,GACpBU,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDV,EAAS,SAAW,GACpBK,EAAmBI,EAEtB,CACH,EAEAE,EAAUZ,EAAeQ,CAAO,EAEhCP,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAc,SAAW,GAEzBO,EAAa,YAAY,IAAM,CAE7B,MAAMM,EAAaP,EADC,IAAI,KAGxB,GAAIO,GAAc,EAAG,CACnB,cAAcN,CAAU,EACxBO,EAAc,CAAC,EACfd,EAAc,SAAW,GACzB,MACN,MACMc,EAAcD,CAAU,CAE3B,EAAE,GAAI,CACT,CAAC,EAED,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAcE,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EAEtDd,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD"}